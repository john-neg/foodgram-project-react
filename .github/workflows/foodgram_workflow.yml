name: foodgram_project_react

on: [push]

jobs:
#  tests:
#    name: Run Tests
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.9
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
#        cd backend
#        pip install -r requirements.txt
#    - name: Test with flake8 and pytest
#      run: |
#        python -m flake8
#        pytest
#
#  build_and_push_to_docker_hub:
#    name: Push Docker images to Docker Hub
#    runs-on: ubuntu-latest
#    needs: tests
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login to Docker
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Push Frontend to Docker Hub
#        uses: docker/build-push-action@v3
#        with:
#          context: frontend/
#          push: true
#          tags: johnneg/foodgram_project_react_frontend:latest
#      - name: Push Backend to Docker Hub
#        uses: docker/build-push-action@v3
#        with:
#          context: backend/
#          push: true
#          tags: johnneg/foodgram_project_react:latest

  deploy:
    name: Deploy to remote Server
    runs-on: ubuntu-latest
#    needs: build_and_push_to_docker_hub
    steps:
      - name: Run a multi-line script
        run: |
          mkdir ../build
          cp -TR infra/ ../build
          tar -cvf deploy.tar ../build/
      - name: copy config files to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          overwrite: 'true'
          source: "deploy.tar"
          target: ""
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker compose stop
            sudo docker compose rm web
            sudo docker pull johnneg/foodgram_project_react:latest
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >| .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker compose up -d

  send_message:
    name: Send message to Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!